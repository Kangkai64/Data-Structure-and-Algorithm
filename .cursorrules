# Clinic Management System - Cursor Rules

## Project Overview
This is a Java-based Clinic Management System built with Maven. The project follows a layered architecture pattern with clear separation of concerns.

## Project Structure
- **entity/**: Data models and entities (Patient, Doctor, Appointment, etc.)
- **control/**: Business logic and controllers
- **boundary/**: User interface components
- **dao/**: Data Access Objects for database operations
- **utility/**: Helper classes and utilities
- **adt/**: Abstract Data Types and custom data structures

## Technology Stack
- Java 23
- Maven for dependency management
- MySQL database
- HikariCP for connection pooling

## Coding Conventions
- Use meaningful variable and method names. Don't use the traditional i, j and k for loop index.
- Follow Java naming conventions (camelCase for variables/methods, PascalCase for classes)
- Add appropriate comments for complex logic
- Implement proper error handling and validation
- Use the layered architecture pattern consistently
- Use only user custom data structures
- Never use ADTs from java.utils.Collection libraries

## Database Conventions
- Use prepared statements to prevent SQL injection
- Implement proper connection pooling with HikariCP
- Handle database transactions appropriately
- Use meaningful table and column names

## Architecture Guidelines
- Keep business logic in control layer
- Use DAO pattern for data access
- Implement proper separation between UI and business logic
- Use entity classes for data transfer

## Common Patterns
- CRUD operations for entities
- Input validation in boundary layer
- Business rules enforcement in control layer
- Database operations in DAO layer

## Testing
- Write unit tests for business logic
- Test database operations with proper test data
- Validate input/output at each layer

## Security Considerations
- Validate all user inputs
- Use prepared statements for database queries
- Implement proper access control
- Handle sensitive data appropriately 

## Problem Statement
Tunku Abdul Rahman University of Management and Technology (TAR UMT) is establishing an on-campus clinic to provide medical care for students.  To support clinic operations, a Clinic Management System is required that allows students to book an appointment or walk-ins for the doctor consultations, make payment, get the medicines and other functions as well. Your task is to develop a Clinic Management System that effectively models the one-to-many relationships using collection ADTs (Abstract Data Types). You may make reasonable assumptions as needed. Marks will be awarded based on the creativity and level of competence demonstrated in your implementation.

Please include following modules but not limited to these:

Module 1: Patient Management Module - manage patient registration, record maintenance and queuing management.
Module 2: Doctor Management Module - Manage doctor information, duty schedules and availability tracking.
Module 3: Consultation Management Module - Manage patient consultations and arrange subsequent visit  appointments.
Module 4: Medical Treatment Management Module - Manage patient diagnosis and maintain treatment history records
Module 5: Pharmacy Management Module - Manage medicine dispensing after doctor consultation and maintain medicine stock control.
Each module should include a reporting feature (at least 2 summary reports).